/**
 * generated by Xtext 2.25.0
 */
package org.xtext.coursework.storyLang.story.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.coursework.storyLang.story.Adjectives;
import org.xtext.coursework.storyLang.story.StoryPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Adjectives</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.coursework.storyLang.story.impl.AdjectivesImpl#getAdjectives <em>Adjectives</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AdjectivesImpl extends MinimalEObjectImpl.Container implements Adjectives
{
  /**
   * The default value of the '{@link #getAdjectives() <em>Adjectives</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAdjectives()
   * @generated
   * @ordered
   */
  protected static final String ADJECTIVES_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAdjectives() <em>Adjectives</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAdjectives()
   * @generated
   * @ordered
   */
  protected String adjectives = ADJECTIVES_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AdjectivesImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return StoryPackage.Literals.ADJECTIVES;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAdjectives()
  {
    return adjectives;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAdjectives(String newAdjectives)
  {
    String oldAdjectives = adjectives;
    adjectives = newAdjectives;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StoryPackage.ADJECTIVES__ADJECTIVES, oldAdjectives, adjectives));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case StoryPackage.ADJECTIVES__ADJECTIVES:
        return getAdjectives();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case StoryPackage.ADJECTIVES__ADJECTIVES:
        setAdjectives((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case StoryPackage.ADJECTIVES__ADJECTIVES:
        setAdjectives(ADJECTIVES_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case StoryPackage.ADJECTIVES__ADJECTIVES:
        return ADJECTIVES_EDEFAULT == null ? adjectives != null : !ADJECTIVES_EDEFAULT.equals(adjectives);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (adjectives: ");
    result.append(adjectives);
    result.append(')');
    return result.toString();
  }

} //AdjectivesImpl
