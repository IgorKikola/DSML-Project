/**
 * generated by Xtext 2.25.0
 */
package org.xtext.coursework.storyLang.story.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.coursework.storyLang.story.Adverbs;
import org.xtext.coursework.storyLang.story.StoryPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Adverbs</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.coursework.storyLang.story.impl.AdverbsImpl#getAdverbs <em>Adverbs</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AdverbsImpl extends MinimalEObjectImpl.Container implements Adverbs
{
  /**
   * The default value of the '{@link #getAdverbs() <em>Adverbs</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAdverbs()
   * @generated
   * @ordered
   */
  protected static final String ADVERBS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAdverbs() <em>Adverbs</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAdverbs()
   * @generated
   * @ordered
   */
  protected String adverbs = ADVERBS_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AdverbsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return StoryPackage.Literals.ADVERBS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAdverbs()
  {
    return adverbs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAdverbs(String newAdverbs)
  {
    String oldAdverbs = adverbs;
    adverbs = newAdverbs;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StoryPackage.ADVERBS__ADVERBS, oldAdverbs, adverbs));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case StoryPackage.ADVERBS__ADVERBS:
        return getAdverbs();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case StoryPackage.ADVERBS__ADVERBS:
        setAdverbs((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case StoryPackage.ADVERBS__ADVERBS:
        setAdverbs(ADVERBS_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case StoryPackage.ADVERBS__ADVERBS:
        return ADVERBS_EDEFAULT == null ? adverbs != null : !ADVERBS_EDEFAULT.equals(adverbs);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (adverbs: ");
    result.append(adverbs);
    result.append(')');
    return result.toString();
  }

} //AdverbsImpl
