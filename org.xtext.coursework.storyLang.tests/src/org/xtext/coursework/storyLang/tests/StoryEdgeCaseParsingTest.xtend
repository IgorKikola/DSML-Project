/*
 * generated by Xtext 2.25.0
 */
package org.xtext.coursework.storyLang.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import org.xtext.coursework.storyLang.story.StoryProgram
import org.junit.Assert
import org.junit.jupiter.api.DisplayName


@ExtendWith(InjectionExtension)
@InjectWith(StoryInjectorProvider)
class StoryEdgeCaseParsingTest {
	@Inject
	ParseHelper<StoryProgram> parseHelper = new ParseHelper<StoryProgram>();

	@Test
	@DisplayName("Test too many arguments for place statement parsing")
	def void testPlaceTooManyArgsParsing() {
		val String input = '''
			move: "dance";
		'''
		val StoryProgram program = parseHelper.parse(input)
		Assert.assertNotNull(program)
		Assert.assertEquals(1, program.statements.size)
		val errors = program.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
	
//	@Test
//	@DisplayName("Test too few arguments for move statement parsing")
//	def void testMoveTooFewArgsParsing() {
//		val String input = '''
//			move: "dance";
//		'''
//		val StoryProgram program = parseHelper.parse(input)
//		Assert.assertNotNull(program)
//		Assert.assertEquals(1, program.statements.size)
//		val errors = program.eResource.errors
//		Assertions.assertFalse(errors.iterator.next.toString, '''Unexpected errors: «errors.join(", ")»''')
//	}
	
	
}
